repositories {
    mavenCentral()
}


buildscript {

    ext {
        springBootVersion     = "2.1.3.RELEASE"
        oauth2Version         = "2.3.3.RELEASE"
        jwtVersion            = "1.0.9.RELEASE"
        junitJupiterVersion   = "5.2.0"
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
            mavenCentral()
        }
    }
    dependencies {
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.9"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.19.2')
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"

    }
}


apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: 'com.palantir.docker'
apply plugin: "jacoco"

configurations.all {
    resolutionStrategy {
    }
    configurations.all {
        exclude module:"logback-classic"
        exclude module:"logback-core"
        exclude module:"slf4j-log4j12"
        exclude module: "spring-boot-starter-logging"
    }
}

archivesBaseName = "user-service"
group = 'com.bloxico.userservice'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11

//test {
//    useJUnitPlatform {
//    }
//}

dependencies {

    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
        exclude module: "log4j-over-slf4j"

    }
    compile("org.springframework.retry:spring-retry:1.2.2.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-mail")

    // Security
    compile("org.springframework.security.oauth:spring-security-oauth2:${oauth2Version}")
    compile("org.springframework.security:spring-security-jwt:${jwtVersion}")
    compile("org.springframework.boot:spring-boot-starter-oauth2-client")
    // Security - managed dependencies
    compile("org.springframework.security:spring-security-core")
    compile("org.springframework.security:spring-security-web")
    compile("org.springframework.security:spring-security-config")

    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile('org.postgresql:postgresql:42.2.2')
    compile("org.liquibase:liquibase-core")

    compileOnly("org.projectlombok:lombok:1.18.14")
    annotationProcessor 'org.projectlombok:lombok:1.18.14'
    testCompileOnly("org.projectlombok:lombok:1.18.14")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.14")

    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation('javax.xml.bind:jaxb-api:2.3.0')
    implementation('javax.activation:activation:1.1')
    implementation('org.glassfish.jaxb:jaxb-runtime:2.3.0')

    // template engine dependencies
    compile ('io.pebbletemplates:pebble-spring-boot-2-starter:3.0.5')

    //caffeine caching
    compile 'com.github.ben-manes.caffeine:caffeine'

    compile("org.springframework.boot:spring-boot-starter-log4j2")
    compile group: 'com.lmax', name: 'disruptor', version: '3.3.7'
    compile group: 'org.graylog2.log4j2', name: 'log4j2-gelf', version: '1.3.1'
    compile 'io.sentry:sentry-log4j2:1.6.7'

    compile("io.springfox:springfox-swagger2:2.9.2") {
        exclude group: 'org.springframework', module: 'spring-beans' //by both name and group
        exclude group: 'org.springframework', module: 'spring-context' //by both name and group
        exclude group: 'org.springframework', module: 'spring-aop' //by both name and group

    }
    compile("io.springfox:springfox-swagger-ui:2.8.0")

    compile("javax.servlet:javax.servlet-api:3.1.0")

    compile("commons-io:commons-io:2.6")
    compile("commons-validator:commons-validator:1.6")

    compile ('org.passay:passay:1.0')
    compile ('com.google.code.gson:gson:2.8.5')

    implementation 'org.mapstruct:mapstruct:1.4.1.Final'
    annotationProcessor ('org.mapstruct:mapstruct-processor:1.4.1.Final')

    compile ('org.quartz-scheduler:quartz:2.3.0')
    compile ('com.mchange:c3p0:0.9.5.2')

    compile ('com.amazonaws:aws-java-sdk:1.11.930')

    // junit 5
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')

    // test dependencies
    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'org.mockito'
    }
    testCompile("info.cukes:cucumber-java:1.2.5")
    testCompile("info.cukes:cucumber-junit:1.2.5")
    testCompile("org.jmockit:jmockit:1.34")
    testCompile("io.rest-assured:rest-assured:3.1.0")
    testCompile('io.findify:s3mock_2.13:0.2.6')
}

bootJar {
    group    = "com.bloxico.userservice"
    version  = "0.0.1-SNAPSHOT"
    mainClassName = "com.bloxico.AppEntry"
}

docker {
    dockerfile file('docker/images/userservice/Dockerfile')
    dependsOn build
    name "${bootJar.group}/${bootJar.baseName}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}